# Makefile per Esercizio 1: Gestione Persone con File Binario
# Autore: Alessandro Bilotti
# Data: 11 agosto 2025

CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -pedantic
DEBUG_FLAGS = -g -DDEBUG
RELEASE_FLAGS = -O2 -DNDEBUG

# File
MAIN_SRC = inserisci_persona.c
TEST_SRC = test_inserisci_persona.c
MAIN_EXE = inserisci_persona
TEST_EXE = test_inserisci_persona
DATA_FILE = people.dat

# Target predefinito
all: $(MAIN_EXE) $(TEST_EXE)

# Compilazione programma principale
$(MAIN_EXE): $(MAIN_SRC)
	@echo "üî® Compilazione programma principale..."
	$(CC) $(CFLAGS) $(RELEASE_FLAGS) -o $@ $<
	@echo "‚úÖ $(MAIN_EXE) compilato con successo!"

# Compilazione programma di test
$(TEST_EXE): $(TEST_SRC)
	@echo "üî® Compilazione programma di test..."
	$(CC) $(CFLAGS) $(RELEASE_FLAGS) -o $@ $<
	@echo "‚úÖ $(TEST_EXE) compilato con successo!"

# Versione debug
debug: $(MAIN_SRC)
	@echo "üêõ Compilazione in modalit√† debug..."
	$(CC) $(CFLAGS) $(DEBUG_FLAGS) -o $(MAIN_EXE)_debug $(MAIN_SRC)
	@echo "‚úÖ $(MAIN_EXE)_debug compilato!"

# Test completo
test: $(TEST_EXE)
	@echo "üß™ Esecuzione test automatico..."
	./$(TEST_EXE)
	@echo ""
	@echo "üìä Verifica file creato:"
	@ls -la $(DATA_FILE) 2>/dev/null || echo "‚ùå File $(DATA_FILE) non trovato"

# Esecuzione programma principale
run: $(MAIN_EXE)
	@echo "üöÄ Esecuzione programma principale..."
	./$(MAIN_EXE)

# Esecuzione con dati di test
run-test: test
	@echo ""
	@echo "üéØ Ora puoi eseguire './$(MAIN_EXE)' per gestire il file popolato!"

# Controllo sintassi
check:
	@echo "üîç Controllo sintassi file sorgenti..."
	$(CC) $(CFLAGS) -fsyntax-only $(MAIN_SRC)
	$(CC) $(CFLAGS) -fsyntax-only $(TEST_SRC)
	@echo "‚úÖ Sintassi corretta!"

# Analisi file binario
analyze: $(DATA_FILE)
	@echo "üîç ANALISI FILE BINARIO $(DATA_FILE)"
	@echo "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "="
	@echo "üìè Dimensione file: $$(wc -c < $(DATA_FILE) 2>/dev/null || echo '0') bytes"
	@echo "üìä Dimensione record: 68 bytes (teorica)"
	@echo "üë• Numero record: $$(echo "$$(wc -c < $(DATA_FILE) 2>/dev/null || echo '0') / 68" | bc 2>/dev/null || echo '0')"
	@echo "üïí Ultima modifica: $$(stat -f '%Sm' $(DATA_FILE) 2>/dev/null || echo 'N/A')"
	@echo ""
	@echo "üí° Per vedere il contenuto usa './$(MAIN_EXE)' opzione 2"

# Backup del file dati
backup: $(DATA_FILE)
	@echo "üíæ Creazione backup di $(DATA_FILE)..."
	@TIMESTAMP=$$(date +%Y%m%d_%H%M%S); \
	cp $(DATA_FILE) $(DATA_FILE).backup_$$TIMESTAMP; \
	echo "‚úÖ Backup creato: $(DATA_FILE).backup_$$TIMESTAMP"

# Ripristino backup pi√π recente
restore:
	@echo "üîÑ Ripristino backup pi√π recente..."
	@LATEST=$$(ls -1t $(DATA_FILE).backup_* 2>/dev/null | head -1); \
	if [ -n "$$LATEST" ]; then \
		cp "$$LATEST" $(DATA_FILE); \
		echo "‚úÖ Ripristinato da: $$LATEST"; \
	else \
		echo "‚ùå Nessun backup trovato"; \
	fi

# Confronto dimensioni testo vs binario
compare-size: $(TEST_EXE)
	@echo "üìä CONFRONTO DIMENSIONI: TESTO vs BINARIO"
	@echo "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "="
	@./$(TEST_EXE) > /dev/null 2>&1 || true
	@if [ -f $(DATA_FILE) ]; then \
		BIN_SIZE=$$(wc -c < $(DATA_FILE)); \
		echo "üíæ File binario: $$BIN_SIZE bytes"; \
		echo "üìù File testo (stimato): $$(echo "$$BIN_SIZE * 2" | bc) bytes"; \
		echo "‚ö° Risparmio: ~50%"; \
	else \
		echo "‚ùå Esegui prima 'make test' per creare il file"; \
	fi

# Informazioni sul progetto
info:
	@echo "üìã INFORMAZIONI PROGETTO"
	@echo "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "="
	@echo "üéØ Esercizio: Gestione Persone con File Binario"
	@echo "üìÅ File sorgenti:"
	@echo "   ‚Ä¢ $(MAIN_SRC) - Programma principale interattivo"
	@echo "   ‚Ä¢ $(TEST_SRC) - Generazione dati di test"
	@echo "üìä Struttura record:"
	@echo "   ‚Ä¢ cognome:     char[31] = 31 bytes"
	@echo "   ‚Ä¢ nome:        char[31] = 31 bytes"
	@echo "   ‚Ä¢ sesso:       char     = 1 byte"
	@echo "   ‚Ä¢ anno_nascita: int     = 4 bytes"
	@echo "   ‚Ä¢ TOTALE:               = 67 bytes + padding"
	@echo "üíæ File dati: $(DATA_FILE)"
	@echo ""
	@echo "üöÄ Comandi utili:"
	@echo "   make test      - Crea file con dati di esempio"
	@echo "   make run       - Esegue programma interattivo"
	@echo "   make analyze   - Analizza file binario"
	@echo "   make backup    - Crea backup del file dati"

# Pulizia file generati
clean:
	@echo "üßπ Pulizia file generati..."
	rm -f $(MAIN_EXE) $(TEST_EXE) $(MAIN_EXE)_debug
	@echo "‚úÖ Eseguibili rimossi!"

# Pulizia completa (include file dati)
clean-all: clean
	@echo "üßπ Pulizia completa..."
	rm -f $(DATA_FILE) $(DATA_FILE).backup_*
	@echo "‚úÖ File dati e backup rimossi!"

# Aiuto
help:
	@echo "üéØ MAKEFILE - GESTIONE PERSONE CON FILE BINARIO"
	@echo "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "=" "="
	@echo ""
	@echo "üìã TARGET PRINCIPALI:"
	@echo "   make all         - Compila tutto"
	@echo "   make test        - Crea file di test con dati esempio"
	@echo "   make run         - Esegue programma interattivo"
	@echo "   make run-test    - Test + esecuzione"
	@echo ""
	@echo "üîß SVILUPPO:"
	@echo "   make debug       - Compila in modalit√† debug"
	@echo "   make check       - Controllo sintassi"
	@echo "   make clean       - Rimuove eseguibili"
	@echo "   make clean-all   - Rimuove tutto (anche dati)"
	@echo ""
	@echo "üìä ANALISI:"
	@echo "   make analyze     - Analizza file binario"
	@echo "   make compare-size - Confronta dimensioni testo/binario"
	@echo "   make info        - Informazioni progetto"
	@echo ""
	@echo "üíæ GESTIONE DATI:"
	@echo "   make backup      - Backup file dati"
	@echo "   make restore     - Ripristina backup pi√π recente"

# Verifica che il file dati esista
$(DATA_FILE):
	@echo "‚ùå File $(DATA_FILE) non trovato!"
	@echo "üí° Esegui 'make test' per creare dati di esempio"
	@exit 1

# Target sempre eseguibili
.PHONY: all debug test run run-test check analyze backup restore compare-size info clean clean-all help
