-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cliente
(
    id serial NOT NULL,
    tipo tipo_cliente NOT NULL,
    rag_soc character varying(50) NOT NULL,
    cod_fis character varying(16) NOT NULL,
    email character varying(30),
    telefono character varying(15),
    PRIMARY KEY (rag_soc, id),
    CONSTRAINT id_cliente UNIQUE (id),
    CONSTRAINT ragione_sociale UNIQUE (rag_soc)
);

CREATE TABLE IF NOT EXISTS public.ordine
(
    id serial NOT NULL,
    cliente character varying(50) NOT NULL,
    prezzo smallint NOT NULL,
    "quantità" integer NOT NULL,
    stato stato_ordine NOT NULL,
    id_amministratore character varying(30),
    PRIMARY KEY (id, cliente)
);

CREATE TABLE IF NOT EXISTS public.modello
(
    id serial NOT NULL,
    nome character varying(50) NOT NULL,
    carico_assi integer NOT NULL,
    v_max integer NOT NULL,
    tipo_cem character varying(50) NOT NULL,
    peso integer NOT NULL,
    lunghezza integer NOT NULL,
    larghezza integer NOT NULL,
    altezza integer NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT nome_modello UNIQUE (nome)
);

CREATE TABLE IF NOT EXISTS public.report
(
    titolo character varying(30) NOT NULL,
    data date NOT NULL DEFAULT CURRENT_DATE,
    contenuto character varying(500) NOT NULL,
    id_amministratore character varying(30),
    PRIMARY KEY (titolo, data)
);

CREATE TABLE IF NOT EXISTS public.tratta
(
    inizio_tratta character varying(30) NOT NULL,
    fine_tratta character varying(30) NOT NULL,
    lunghezza integer,
    tipo tipo_tratta,
    PRIMARY KEY (inizio_tratta, fine_tratta)
);

CREATE TABLE IF NOT EXISTS public.prodotto
(
    id serial NOT NULL,
    modello_id integer,
    anno_prod integer,
    sku character varying(50) NOT NULL,
    cf_dipendente character varying,
    PRIMARY KEY (id),
    CONSTRAINT sku UNIQUE (sku)
        INCLUDE(sku)
);

CREATE TABLE IF NOT EXISTS public.componente
(
    nome character varying(20) NOT NULL,
    larghezza integer,
    lunghezza integer,
    altezza integer,
    peso integer,
    prezzo integer,
    PRIMARY KEY (nome)
);

CREATE TABLE IF NOT EXISTS public.composizione
(
    modello_id serial,
    nome_comp character varying,
    "quantità" integer NOT NULL,
    PRIMARY KEY (modello_id, nome_comp)
);

CREATE TABLE IF NOT EXISTS public.materiale
(
    nome character varying NOT NULL,
    prezzo integer,
    fornitore serial NOT NULL,
    PRIMARY KEY (nome, fornitore),
    CONSTRAINT forn UNIQUE (fornitore),
    CONSTRAINT unq_materiale_nome UNIQUE (nome)
);

CREATE TABLE IF NOT EXISTS public.fornitore_materiale
(
    fornitore_id serial NOT NULL,
    materiale_fornitore serial NOT NULL
);

CREATE TABLE IF NOT EXISTS public.componente_materiale
(
    nome_comp character varying(20) NOT NULL,
    nome_mat character varying NOT NULL,
    nome_forn integer NOT NULL,
    "quantità" integer NOT NULL,
    CONSTRAINT nome_materiale UNIQUE (nome_mat)
);

CREATE TABLE IF NOT EXISTS public.installazione
(
    prodotto_id integer NOT NULL,
    cf_dipendente character varying NOT NULL,
    inizio_tratta character varying(30) NOT NULL,
    fine_tratta character varying(30) NOT NULL,
    data_installazione date DEFAULT CURRENT_DATE,
    PRIMARY KEY (prodotto_id)
);

CREATE TABLE IF NOT EXISTS public.amministratore
(
    id_amministratore character varying(30) NOT NULL,
    nome character varying(20) NOT NULL,
    cognome character varying(20) NOT NULL,
    email character varying(30),
    telefono character varying(15),
    PRIMARY KEY (id_amministratore),
    CONSTRAINT id_amm UNIQUE (id_amministratore)
);

CREATE TABLE IF NOT EXISTS public.team
(
    id serial NOT NULL,
    nome character varying(50) NOT NULL,
    id_amministratore character varying(30),
    PRIMARY KEY (id),
    CONSTRAINT nome_team UNIQUE (nome)
);

CREATE TABLE IF NOT EXISTS public.sede
(
    paese character varying NOT NULL,
    via character varying(20),
    civico character varying(5),
    "CAP" integer,
    n_dipendenti integer,
    PRIMARY KEY (paese, via, civico, "CAP")
);

CREATE TABLE IF NOT EXISTS public.dipendente
(
    codice_fiscale character varying NOT NULL,
    nome character varying(30) NOT NULL,
    cognome character varying(30) NOT NULL,
    email character varying(30),
    telefono character varying(15),
    ruolo character varying(50) NOT NULL,
    id_team integer NOT NULL,
    sede_paese character varying NOT NULL,
    sede_via character varying(20) NOT NULL,
    sede_civico character varying(5) NOT NULL,
    "sede_CAP" integer NOT NULL,
    PRIMARY KEY (codice_fiscale)
);

CREATE TABLE IF NOT EXISTS public.fornitore
(
    id serial NOT NULL,
    sede character varying(30) NOT NULL,
    nome character varying(30) NOT NULL,
    email character varying(50),
    telefono character varying(15),
    CONSTRAINT id_fornitore PRIMARY KEY (id),
    CONSTRAINT id_forn UNIQUE (id)
);

ALTER TABLE IF EXISTS public.ordine
    ADD CONSTRAINT amministratore_ordine FOREIGN KEY (id_amministratore)
    REFERENCES public.amministratore (id_amministratore) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.ordine
    ADD CONSTRAINT cliente_ordine FOREIGN KEY (cliente)
    REFERENCES public.cliente (rag_soc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.report
    ADD CONSTRAINT amministratore_report FOREIGN KEY (id_amministratore)
    REFERENCES public.amministratore (id_amministratore) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.prodotto
    ADD CONSTRAINT modello_id FOREIGN KEY (modello_id)
    REFERENCES public.modello (id) MATCH FULL
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.prodotto
    ADD CONSTRAINT cf_dipendente FOREIGN KEY (cf_dipendente)
    REFERENCES public.dipendente (codice_fiscale) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.composizione
    ADD CONSTRAINT modello_id FOREIGN KEY (modello_id)
    REFERENCES public.modello (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.composizione
    ADD CONSTRAINT nome_comp FOREIGN KEY (nome_comp)
    REFERENCES public.componente (nome) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.fornitore_materiale
    ADD CONSTRAINT materiale_fornitore FOREIGN KEY (materiale_fornitore)
    REFERENCES public.materiale (fornitore) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.fornitore_materiale
    ADD CONSTRAINT id_fornitore FOREIGN KEY (fornitore_id)
    REFERENCES public.fornitore (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.componente_materiale
    ADD CONSTRAINT nome_mat FOREIGN KEY (nome_mat)
    REFERENCES public.materiale (nome) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.componente_materiale
    ADD CONSTRAINT nome_comp FOREIGN KEY (nome_comp)
    REFERENCES public.componente (nome) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.installazione
    ADD CONSTRAINT prodotto_id FOREIGN KEY (prodotto_id)
    REFERENCES public.prodotto (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.installazione
    ADD CONSTRAINT tratta FOREIGN KEY (inizio_tratta, fine_tratta)
    REFERENCES public.tratta (inizio_tratta, fine_tratta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.installazione
    ADD CONSTRAINT cf_dipendente FOREIGN KEY (cf_dipendente)
    REFERENCES public.dipendente (codice_fiscale) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.team
    ADD CONSTRAINT amministratore_team FOREIGN KEY (id_amministratore)
    REFERENCES public.amministratore (id_amministratore) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.dipendente
    ADD CONSTRAINT sede FOREIGN KEY (sede_paese, sede_via, sede_civico, "sede_CAP")
    REFERENCES public.sede (paese, via, civico, "CAP") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL
    NOT VALID;


ALTER TABLE IF EXISTS public.dipendente
    ADD CONSTRAINT id_team FOREIGN KEY (id_team)
    REFERENCES public.team (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;